/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables.records;


import diamond.cms.server.model.jooq.tables.CComment;
import diamond.cms.server.model.jooq.tables.interfaces.ICComment;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CCommentRecord extends UpdatableRecordImpl<CCommentRecord> implements Record9<String, String, String, String, String, Integer, Timestamp, Timestamp, String>, ICComment {

	private static final long serialVersionUID = 1255263083;

	/**
	 * Setter for <code>cms.c_comment.id</code>.
	 */
	@Override
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cms.c_comment.id</code>.
	 */
	@NotNull
	@Size(max = 40)
	@Override
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>cms.c_comment.article_id</code>.
	 */
	@Override
	public void setArticleId(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cms.c_comment.article_id</code>.
	 */
	@NotNull
	@Size(max = 40)
	@Override
	public String getArticleId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>cms.c_comment.nickname</code>.
	 */
	@Override
	public void setNickname(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cms.c_comment.nickname</code>.
	 */
	@NotNull
	@Size(max = 45)
	@Override
	public String getNickname() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>cms.c_comment.email</code>.
	 */
	@Override
	public void setEmail(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cms.c_comment.email</code>.
	 */
	@NotNull
	@Size(max = 45)
	@Override
	public String getEmail() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>cms.c_comment.content</code>.
	 */
	@Override
	public void setContent(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cms.c_comment.content</code>.
	 */
	@Size(max = 500)
	@Override
	public String getContent() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>cms.c_comment.state</code>. 0: 删除
1: 正常

	 */
	@Override
	public void setState(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cms.c_comment.state</code>. 0: 删除
1: 正常

	 */
	@NotNull
	@Override
	public Integer getState() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>cms.c_comment.create_time</code>.
	 */
	@Override
	public void setCreateTime(Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cms.c_comment.create_time</code>.
	 */
	@NotNull
	@Override
	public Timestamp getCreateTime() {
		return (Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>cms.c_comment.update_time</code>.
	 */
	@Override
	public void setUpdateTime(Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cms.c_comment.update_time</code>.
	 */
	@NotNull
	@Override
	public Timestamp getUpdateTime() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>cms.c_comment.ip</code>.
	 */
	@Override
	public void setIp(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cms.c_comment.ip</code>.
	 */
	@NotNull
	@Size(max = 40)
	@Override
	public String getIp() {
		return (String) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, String, String, String, Integer, Timestamp, Timestamp, String> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, String, String, String, Integer, Timestamp, Timestamp, String> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return CComment.C_COMMENT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return CComment.C_COMMENT.ARTICLE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return CComment.C_COMMENT.NICKNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return CComment.C_COMMENT.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return CComment.C_COMMENT.CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return CComment.C_COMMENT.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field7() {
		return CComment.C_COMMENT.CREATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return CComment.C_COMMENT.UPDATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return CComment.C_COMMENT.IP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getArticleId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getNickname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getContent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value7() {
		return getCreateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getUpdateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getIp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord value2(String value) {
		setArticleId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord value3(String value) {
		setNickname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord value4(String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord value5(String value) {
		setContent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord value6(Integer value) {
		setState(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord value7(Timestamp value) {
		setCreateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord value8(Timestamp value) {
		setUpdateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord value9(String value) {
		setIp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CCommentRecord values(String value1, String value2, String value3, String value4, String value5, Integer value6, Timestamp value7, Timestamp value8, String value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ICComment from) {
		setId(from.getId());
		setArticleId(from.getArticleId());
		setNickname(from.getNickname());
		setEmail(from.getEmail());
		setContent(from.getContent());
		setState(from.getState());
		setCreateTime(from.getCreateTime());
		setUpdateTime(from.getUpdateTime());
		setIp(from.getIp());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ICComment> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CCommentRecord
	 */
	public CCommentRecord() {
		super(CComment.C_COMMENT);
	}

	/**
	 * Create a detached, initialised CCommentRecord
	 */
	public CCommentRecord(String id, String articleId, String nickname, String email, String content, Integer state, Timestamp createTime, Timestamp updateTime, String ip) {
		super(CComment.C_COMMENT);

		setValue(0, id);
		setValue(1, articleId);
		setValue(2, nickname);
		setValue(3, email);
		setValue(4, content);
		setValue(5, state);
		setValue(6, createTime);
		setValue(7, updateTime);
		setValue(8, ip);
	}
}
