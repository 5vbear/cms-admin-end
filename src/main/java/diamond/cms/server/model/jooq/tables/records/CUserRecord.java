/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables.records;


import diamond.cms.server.model.jooq.tables.CUser;
import diamond.cms.server.model.jooq.tables.interfaces.ICUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CUserRecord extends UpdatableRecordImpl<CUserRecord> implements Record7<String, Timestamp, Long, Timestamp, String, String, String>, ICUser {

	private static final long serialVersionUID = -1567220836;

	/**
	 * Setter for <code>cms.c_user.id</code>.
	 */
	@Override
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cms.c_user.id</code>.
	 */
	@NotNull
	@Size(max = 255)
	@Override
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>cms.c_user.createTime</code>.
	 */
	@Override
	public void setCreatetime(Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cms.c_user.createTime</code>.
	 */
	@NotNull
	@Override
	public Timestamp getCreatetime() {
		return (Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>cms.c_user.expired</code>.
	 */
	@Override
	public void setExpired(Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cms.c_user.expired</code>.
	 */
	@Override
	public Long getExpired() {
		return (Long) getValue(2);
	}

	/**
	 * Setter for <code>cms.c_user.lastLoginTime</code>.
	 */
	@Override
	public void setLastlogintime(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cms.c_user.lastLoginTime</code>.
	 */
	@NotNull
	@Override
	public Timestamp getLastlogintime() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>cms.c_user.password</code>.
	 */
	@Override
	public void setPassword(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cms.c_user.password</code>.
	 */
	@NotNull
	@Size(max = 255)
	@Override
	public String getPassword() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>cms.c_user.token</code>.
	 */
	@Override
	public void setToken(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cms.c_user.token</code>.
	 */
	@Size(max = 255)
	@Override
	public String getToken() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>cms.c_user.username</code>.
	 */
	@Override
	public void setUsername(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cms.c_user.username</code>.
	 */
	@NotNull
	@Size(max = 255)
	@Override
	public String getUsername() {
		return (String) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, Timestamp, Long, Timestamp, String, String, String> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, Timestamp, Long, Timestamp, String, String, String> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return CUser.C_USER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field2() {
		return CUser.C_USER.CREATETIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field3() {
		return CUser.C_USER.EXPIRED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return CUser.C_USER.LASTLOGINTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return CUser.C_USER.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return CUser.C_USER.TOKEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return CUser.C_USER.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value2() {
		return getCreatetime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value3() {
		return getExpired();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getLastlogintime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getToken();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CUserRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CUserRecord value2(Timestamp value) {
		setCreatetime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CUserRecord value3(Long value) {
		setExpired(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CUserRecord value4(Timestamp value) {
		setLastlogintime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CUserRecord value5(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CUserRecord value6(String value) {
		setToken(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CUserRecord value7(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CUserRecord values(String value1, Timestamp value2, Long value3, Timestamp value4, String value5, String value6, String value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ICUser from) {
		setId(from.getId());
		setCreatetime(from.getCreatetime());
		setExpired(from.getExpired());
		setLastlogintime(from.getLastlogintime());
		setPassword(from.getPassword());
		setToken(from.getToken());
		setUsername(from.getUsername());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ICUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CUserRecord
	 */
	public CUserRecord() {
		super(CUser.C_USER);
	}

	/**
	 * Create a detached, initialised CUserRecord
	 */
	public CUserRecord(String id, Timestamp createtime, Long expired, Timestamp lastlogintime, String password, String token, String username) {
		super(CUser.C_USER);

		setValue(0, id);
		setValue(1, createtime);
		setValue(2, expired);
		setValue(3, lastlogintime);
		setValue(4, password);
		setValue(5, token);
		setValue(6, username);
	}
}
