/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq;


import diamond.cms.server.model.jooq.tables.CArticle;
import diamond.cms.server.model.jooq.tables.CArticleTag;
import diamond.cms.server.model.jooq.tables.CCatalog;
import diamond.cms.server.model.jooq.tables.CPageView;
import diamond.cms.server.model.jooq.tables.CSetting;
import diamond.cms.server.model.jooq.tables.CTag;
import diamond.cms.server.model.jooq.tables.CUser;
import diamond.cms.server.model.jooq.tables.records.CArticleRecord;
import diamond.cms.server.model.jooq.tables.records.CArticleTagRecord;
import diamond.cms.server.model.jooq.tables.records.CCatalogRecord;
import diamond.cms.server.model.jooq.tables.records.CPageViewRecord;
import diamond.cms.server.model.jooq.tables.records.CSettingRecord;
import diamond.cms.server.model.jooq.tables.records.CTagRecord;
import diamond.cms.server.model.jooq.tables.records.CUserRecord;

import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>cms</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<CArticleRecord> KEY_C_ARTICLE_PRIMARY = UniqueKeys0.KEY_C_ARTICLE_PRIMARY;
	public static final UniqueKey<CArticleTagRecord> KEY_C_ARTICLE_TAG_PRIMARY = UniqueKeys0.KEY_C_ARTICLE_TAG_PRIMARY;
	public static final UniqueKey<CCatalogRecord> KEY_C_CATALOG_PRIMARY = UniqueKeys0.KEY_C_CATALOG_PRIMARY;
	public static final UniqueKey<CPageViewRecord> KEY_C_PAGE_VIEW_PRIMARY = UniqueKeys0.KEY_C_PAGE_VIEW_PRIMARY;
	public static final UniqueKey<CSettingRecord> KEY_C_SETTING_PRIMARY = UniqueKeys0.KEY_C_SETTING_PRIMARY;
	public static final UniqueKey<CSettingRecord> KEY_C_SETTING_NAME_UNIQUE = UniqueKeys0.KEY_C_SETTING_NAME_UNIQUE;
	public static final UniqueKey<CTagRecord> KEY_C_TAG_PRIMARY = UniqueKeys0.KEY_C_TAG_PRIMARY;
	public static final UniqueKey<CTagRecord> KEY_C_TAG_NAME_UNIQUE = UniqueKeys0.KEY_C_TAG_NAME_UNIQUE;
	public static final UniqueKey<CUserRecord> KEY_C_USER_PRIMARY = UniqueKeys0.KEY_C_USER_PRIMARY;
	public static final UniqueKey<CUserRecord> KEY_C_USER_UK_E4YLW9V9NHRB2RJVY09B1Y7XS = UniqueKeys0.KEY_C_USER_UK_E4YLW9V9NHRB2RJVY09B1Y7XS;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<CArticleRecord> KEY_C_ARTICLE_PRIMARY = createUniqueKey(CArticle.C_ARTICLE, CArticle.C_ARTICLE.ID);
		public static final UniqueKey<CArticleTagRecord> KEY_C_ARTICLE_TAG_PRIMARY = createUniqueKey(CArticleTag.C_ARTICLE_TAG, CArticleTag.C_ARTICLE_TAG.ARTICLE_ID, CArticleTag.C_ARTICLE_TAG.TAG_ID);
		public static final UniqueKey<CCatalogRecord> KEY_C_CATALOG_PRIMARY = createUniqueKey(CCatalog.C_CATALOG, CCatalog.C_CATALOG.ID);
		public static final UniqueKey<CPageViewRecord> KEY_C_PAGE_VIEW_PRIMARY = createUniqueKey(CPageView.C_PAGE_VIEW, CPageView.C_PAGE_VIEW.ID);
		public static final UniqueKey<CSettingRecord> KEY_C_SETTING_PRIMARY = createUniqueKey(CSetting.C_SETTING, CSetting.C_SETTING.ID);
		public static final UniqueKey<CSettingRecord> KEY_C_SETTING_NAME_UNIQUE = createUniqueKey(CSetting.C_SETTING, CSetting.C_SETTING.NAME);
		public static final UniqueKey<CTagRecord> KEY_C_TAG_PRIMARY = createUniqueKey(CTag.C_TAG, CTag.C_TAG.ID);
		public static final UniqueKey<CTagRecord> KEY_C_TAG_NAME_UNIQUE = createUniqueKey(CTag.C_TAG, CTag.C_TAG.NAME);
		public static final UniqueKey<CUserRecord> KEY_C_USER_PRIMARY = createUniqueKey(CUser.C_USER, CUser.C_USER.ID);
		public static final UniqueKey<CUserRecord> KEY_C_USER_UK_E4YLW9V9NHRB2RJVY09B1Y7XS = createUniqueKey(CUser.C_USER, CUser.C_USER.USERNAME);
	}
}
